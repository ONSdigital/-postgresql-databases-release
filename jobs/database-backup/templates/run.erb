#!/bin/sh
#

set -ex

# We log everything to stderr so that we can see the stdout and stderr inline with each other
# If we don't, we get the stdout whilst the errand is running and then the stderr later on
log(){
	cat 2<%= '>&' %>1 <%= '<<' %>EOF
$@
EOF
}

PACKAGE_DIR=/var/vcap/packages/postgres-utils-9.6.6
S3_BOSH_CLI=/var/vcap/packages/bosh-s3cli/bin/s3cli

PG_DUMP="$PACKAGE_DIR/bin/pg_dump"
PG_DUMPALL="$PACKAGE_DIR/bin/pg_dumpall"
PSQL="$PACKAGE_DIR/bin/psql"

S3_CONFIG_JSON=/var/vcap/packages/s3-config/config/s3-config.json

<% p('postgresql_databases').each do |rdms| %>
	PG_HOST='<%= rdms['host'] %>'

	# psql suck this in
	export PGPORT='<%= rdms['port'] %>'

	<% rdms['databases'].each do |database| %>
		DUMP_FILE='pgdmp-<%= database['name' ] %>.sql'
		DUMP_LOCAL_FILE="/tmp/$DUMP_FILE"
		DUMP_S3_FILE="databases/$DUMP_FILE"

		<% if ! database['no_backup'] %>
			# Check if the database exists, if so we do a database dump
			if [ -f "$S3_CONFIG_JSON" ] <%= '&&' %> "$PSQL" -Atc "SELECT true -U'<%= rdms['admin_password'] %>'" -h"$PG_HOST" <%= database['name'] %>' | \
				grep -qE '^t$' || [ x'<%= database['name'] %>' = x'all' ]; then

				if [ x'<%= database['name'] %>' = x'all' ]; then
					log 'Dumping all databases'
					PGPASSWORD='<%= rdms['admin_password'] %>' "$PG_DUMPALL" --clean --if-exists -U"<%= rdms['admin_username'] %>" \
						-h"$PG_HOST" <%= '>' %>"$DUMP_LOCAL_FILE"
				else
					log 'Dumping <%= database['name'] %>'
					PGPASSWORD='<%= database['password'] %>' "$PG_DUMP" --clean --if-exists --serializable-deferrable -U'<%= database['username'] %>' \
						-h"$PG_HOST" '<%= database['name' ] %>' <%= '>' %>"$DUMP_LOCAL_FILE"
				fi

				# Copy to S3
				log "Copying $DUMP_FILE dump to s3://<%= p('s3_config.bucket_name') %>/$DUMP_S3_FILE"
				"$S3_BOSH_CLI" -c "$S3_CONFIG_JSON" put "$DUMP_LOCAL_FILE" "$DUMP_S3_FILE" 2<%= '>&' %>1
			else
				log 'Database does not exist: <%= database['name'] %>'
			fi
		<% end %>
	<% end %>
<% end %>
